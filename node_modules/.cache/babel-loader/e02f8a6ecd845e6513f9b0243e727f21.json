{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { GChart } from \"vue-google-charts\";\nimport PartyInfo from \"../components/PartyInfo.vue\";\n//import cheerio from \"cheerio\";\nimport axios from \"axios\";\nexport default {\n  name: \"OpinionGraph\",\n  components: {\n    GChart,\n    PartyInfo\n  },\n  props: {\n    currentView: String\n  },\n  methods: {\n    grabData() {\n      axios.get(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vSHdxj1KPFMHP5gT1ybNfd_-N_7QikiUQ1zMKJgGb4xZjwPY4DcRE6xjWHlWqgbhawjk8ZO6I52MakV/pubhtml\").then(response => this.parseData(response.data));\n    },\n    parseData(data) {\n      var returnData = [[\"Day\", \"CPC\", \"LPC\", \"NDP\", \"BQ\", \"PPC\", \"GPC\"]];\n      var dataCap = returnData[0].length;\n      var indexCounter = 0;\n      data = data.substring(data.indexOf(\"Mapoll : Federal\"));\n      console.log(\"novo\");\n      var table = data.split(/<.*?>/);\n      for (var item of table) {\n        if (!item.includes(\"/\") && !item.length == 0) {\n          if (item.charAt(0) == \"[\" && item.charAt(item.length - 1) == \"]\") {\n            indexCounter = 0;\n            var newArray = new Array();\n            newArray.push(table[table.indexOf(item) - 2]);\n            returnData.push(newArray);\n          } else if (indexCounter < dataCap - 1 && returnData.length > 1) {\n            returnData[returnData.length - 1].push(this.toInt(item));\n            indexCounter++;\n          }\n        }\n      }\n      console.log(returnData);\n      //return returnData;\n      this.dataList = returnData;\n    },\n    toInt(value) {\n      if (value.includes(\"*\")) value = value.substring(1, value.length - 1);\n      return parseInt(value);\n    }\n  },\n  mounted() {},\n  data() {\n    let dataList = this.grabData();\n    console.log(dataList);\n    let partyList = [];\n    let partyNums = new Map();\n    for (let p of dataList[0]) {\n      if (p !== \"Day\" && !partyList.includes(p)) {\n        partyList.push(p);\n        partyNums.set(p, dataList[dataList.length - 1][dataList[0].indexOf(p)]);\n      }\n    }\n    setTimeout({}, 1);\n    return {\n      data: dataList,\n      partyList: partyList,\n      partyNums: partyNums,\n      options: {\n        backgroundColor: \"#e8e8e8\",\n        focusTarget: \"category\",\n        animation: {\n          duration: 1000,\n          easing: \"out\"\n        },\n        curveType: \"function\",\n        chart: {\n          title: \"Federal Polls\",\n          subtitle: \"In percentage\"\n        },\n        width: 1000,\n        height: 400\n      }\n    };\n  }\n};","map":{"version":3,"mappings":";AAiBA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACAC;EACA;EACAC;IACAC;MACAC,MACAC,IACA,0IACA,CACAC;IACA;IACAC;MACA;MACA;MACA;MACAC;MACAC;MACA;MACA;QACA;UACA;YACAC;YACA;YACAC;YACAC;UACA;YACAA;YACAF;UACA;QACA;MACA;MACAD;MACA;MACA;IACA;IACAI;MACA;MACA;IACA;EACA;EACAC;EACAN;IACA;IACAC;IACA;IACA;IACA;MACA;QACAM;QACAC;MACA;IACA;IAEAC;IACA;MACAT;MACAO;MACAC;MACAE;QACAC;QACAC;QACAC;UACAC;UACAC;QACA;QACAC;QACAC;UACAC;UACAC;QACA;QACAC;QACAC;MACA;IACA;EACA;AACA","names":["name","components","GChart","PartyInfo","props","currentView","methods","grabData","axios","get","then","parseData","data","console","indexCounter","newArray","returnData","toInt","mounted","partyList","partyNums","setTimeout","options","backgroundColor","focusTarget","animation","duration","easing","curveType","chart","title","subtitle","width","height"],"sourceRoot":"src/components","sources":["OpinionGraph.vue"],"sourcesContent":["<template>\n  <div>\n    <div>{{ currentView }} opinion polls</div>\n    <div class=\"partyInfoBox\">\n      <PartyInfo\n        v-for=\"party of partyList\"\n        :party=\"party\"\n        :currentView=\"currentView\"\n        :partyNum=\"partyNums.get(party)\"\n        :max=\"Math.max(...partyNums.values())\"\n        :key=\"party\"\n      />\n    </div>\n    <GChart type=\"LineChart\" :options=\"options\" :data=\"data\" />\n  </div>\n</template>\n<script>\nimport { GChart } from \"vue-google-charts\";\nimport PartyInfo from \"../components/PartyInfo.vue\";\n//import cheerio from \"cheerio\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"OpinionGraph\",\n  components: {\n    GChart,\n    PartyInfo,\n  },\n  props: {\n    currentView: String,\n  },\n  methods: {\n    grabData() {\n      axios\n        .get(\n          \"https://docs.google.com/spreadsheets/d/e/2PACX-1vSHdxj1KPFMHP5gT1ybNfd_-N_7QikiUQ1zMKJgGb4xZjwPY4DcRE6xjWHlWqgbhawjk8ZO6I52MakV/pubhtml\"\n        )\n        .then((response) => this.parseData(response.data));\n    },\n    parseData(data) {\n      var returnData = [[\"Day\", \"CPC\", \"LPC\", \"NDP\", \"BQ\", \"PPC\", \"GPC\"]];\n      var dataCap = returnData[0].length;\n      var indexCounter = 0;\n      data = data.substring(data.indexOf(\"Mapoll : Federal\"));\n      console.log(\"novo\");\n      var table = data.split(/<.*?>/);\n      for (var item of table) {\n        if (!item.includes(\"/\") && !item.length == 0) {\n          if (item.charAt(0) == \"[\" && item.charAt(item.length - 1) == \"]\") {\n            indexCounter = 0;\n            var newArray = new Array();\n            newArray.push(table[table.indexOf(item) - 2]);\n            returnData.push(newArray);\n          } else if (indexCounter < dataCap - 1 && returnData.length > 1) {\n            returnData[returnData.length - 1].push(this.toInt(item));\n            indexCounter++;\n          }\n        }\n      }\n      console.log(returnData);\n      //return returnData;\n      this.dataList = returnData;\n    },\n    toInt(value) {\n      if (value.includes(\"*\")) value = value.substring(1, value.length - 1);\n      return parseInt(value);\n    },\n  },\n  mounted() {},\n  data() {\n    let dataList = this.grabData();\n    console.log(dataList);\n    let partyList = [];\n    let partyNums = new Map();\n    for (let p of dataList[0]) {\n      if (p !== \"Day\" && !partyList.includes(p)) {\n        partyList.push(p);\n        partyNums.set(p, dataList[dataList.length - 1][dataList[0].indexOf(p)]);\n      }\n    }\n\n    setTimeout({}, 1);\n    return {\n      data: dataList,\n      partyList: partyList,\n      partyNums: partyNums,\n      options: {\n        backgroundColor: \"#e8e8e8\",\n        focusTarget: \"category\",\n        animation: {\n          duration: 1000,\n          easing: \"out\",\n        },\n        curveType: \"function\",\n        chart: {\n          title: \"Federal Polls\",\n          subtitle: \"In percentage\",\n        },\n        width: 1000,\n        height: 400,\n      },\n    };\n  },\n};\n</script>\n<style scoped>\n.partyInfoBox {\n  display: flex;\n  flex-wrap: wrap;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}