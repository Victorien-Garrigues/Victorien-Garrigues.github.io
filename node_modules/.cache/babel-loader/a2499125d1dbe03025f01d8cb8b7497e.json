{"ast":null,"code":"export default {\n  name: \"PartyInfo\",\n  props: {\n    currentView: String,\n    party: String,\n    partyNum: Number,\n    max: Number\n  },\n  created() {\n    window.addEventListener(\"resize\", this.myEventHandler);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.myEventHandler);\n  },\n  data() {\n    let partyHex = this.$t(this.currentView + \".\" + this.party + \"-colour\");\n    let barWidth = this.partyNum / this.max * this.getMaxBar(this.initialWidth());\n    return {\n      partyName: this.currentView + \".\" + this.party,\n      barStyle: {\n        backgroundColor: partyHex,\n        width: barWidth + \"px\"\n      },\n      numStyle: {\n        color: partyHex\n      }\n    };\n  },\n  methods: {\n    initialWidth() {\n      if (window.innerWidth > 1060) {\n        return 320;\n      } else if (window.innerWidth > 810) {\n        return 386;\n      } else {\n        return 488;\n      }\n    },\n    myEventHandler() {\n      //this.$nextTick(() => console.log(this.$refs.getWidth.clientWidth));\n      console.log(this.$refs.getWidth.clientWidth);\n      let partyHex = this.$t(this.currentView + \".\" + this.party + \"-colour\");\n      let barWidth = this.partyNum / this.max * this.getMaxBar(this.$refs.getWidth.clientWidth);\n      this.barStyle = {\n        backgroundColor: partyHex,\n        width: barWidth + \"px\"\n      };\n    },\n    getMaxBar(width) {\n      switch (width) {\n        case 320:\n          return 174;\n        case 386:\n          return 240;\n        case 488:\n          return 340;\n        case 340:\n          return 310;\n        case 290:\n          return 200;\n      }\n    },\n    getImgSrc() {\n      let src = require(\"../assets/partyLogos/\" + this.currentView + \"/\" + this.party + \".png\");\n      return src;\n    }\n  }\n};","map":{"version":3,"mappings":"AAeA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;EACA;EACAC;IACAD;EACA;EACAE;IACA;IACA,eACA;IACA;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACAC;MACA;MACA,eACA,2BACA;MACA;QACAP;QACAC;MACA;IACA;IACAO;MACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MAAA;IAEA;IACAC;MACA,4CACA,mBACA,MACA,aACA;MACA;IACA;EACA;AACA","names":["name","props","currentView","party","partyNum","max","created","window","destroyed","data","partyName","barStyle","backgroundColor","width","numStyle","color","methods","initialWidth","myEventHandler","console","getMaxBar","getImgSrc"],"sourceRoot":"src/components","sources":["PartyInfo.vue"],"sourcesContent":["<template>\n  <div ref=\"getWidth\" class=\"infoBox\">\n    <div class=\"smallPartyLogoCrop\">\n      <img class=\"smallPartyLogo\" :src=\"getImgSrc()\" />\n    </div>\n    <div class=\"partyInfoTable\">\n      <div>{{ $t(partyName) }}</div>\n      <div class=\"partyInfoGraph\">\n        <div class=\"partyInfoNum\" :style=\"numStyle\">{{ partyNum }}%</div>\n        <div class=\"colouredBar\" :style=\"barStyle\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"PartyInfo\",\n  props: {\n    currentView: String,\n    party: String,\n    partyNum: Number,\n    max: Number,\n  },\n  created() {\n    window.addEventListener(\"resize\", this.myEventHandler);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.myEventHandler);\n  },\n  data() {\n    let partyHex = this.$t(this.currentView + \".\" + this.party + \"-colour\");\n    let barWidth =\n      (this.partyNum / this.max) * this.getMaxBar(this.initialWidth());\n    return {\n      partyName: this.currentView + \".\" + this.party,\n      barStyle: {\n        backgroundColor: partyHex,\n        width: barWidth + \"px\",\n      },\n      numStyle: {\n        color: partyHex,\n      },\n    };\n  },\n  methods: {\n    initialWidth() {\n      if (window.innerWidth > 1060) {\n        return 320;\n      } else if (window.innerWidth > 810) {\n        return 386;\n      } else {\n        return 488;\n      }\n    },\n    myEventHandler() {\n      //this.$nextTick(() => console.log(this.$refs.getWidth.clientWidth));\n      console.log(this.$refs.getWidth.clientWidth);\n      let partyHex = this.$t(this.currentView + \".\" + this.party + \"-colour\");\n      let barWidth =\n        (this.partyNum / this.max) *\n        this.getMaxBar(this.$refs.getWidth.clientWidth);\n      this.barStyle = {\n        backgroundColor: partyHex,\n        width: barWidth + \"px\",\n      };\n    },\n    getMaxBar(width) {\n      switch (width) {\n        case 320:\n          return 174;\n        case 386:\n          return 240;\n        case 488:\n          return 340;\n        case 340:\n          return 310;\n        case 290:\n          return 200;\n      }\n    },\n    getImgSrc() {\n      let src = require(\"../assets/partyLogos/\" +\n        this.currentView +\n        \"/\" +\n        this.party +\n        \".png\");\n      return src;\n    },\n  },\n};\n</script>\n<style scoped>\n.infoBox {\n  width: 31%;\n  display: flex;\n  font-weight: bold;\n  margin: 5px;\n  padding: 5px;\n  border: solid 1px lightgray;\n  border-radius: 5px;\n  background: #eeeeee;\n}\n.smallPartyLogo {\n  overflow: hidden;\n  border-radius: 50%;\n  min-height: 50px;\n  max-width: 50px;\n  min-width: 50px;\n}\n.smallPartyLogo {\n  width: 30px;\n  height: 30px;\n  object-fit: cover;\n}\n.partyInfoTable {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-left: 15px;\n}\n.partyInfoNum {\n  font-size: 25px;\n  width: 67px;\n  text-align: left;\n}\n.partyInfoGraph {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: fit-content;\n}\n.colouredBar {\n  width: 180px;\n  border-radius: 5px;\n}\n@media only screen and (max-width: 1060px) {\n  .infoBox {\n    width: 47%;\n  }\n}\n@media only screen and (max-width: 810px) {\n  .infoBox {\n    width: 100%;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}